def translate(from_letters, to_letters, text):
    """
    The translate function does a letter to letter translation.
    The from_letters and to_letters parameters are expected to
    be strings of uppercase letters and both strings need to be 
    the same length. The from_letters and to_letters strings define
    a mapping such that from_letters[i] found in the text string 
    parameter will be converted to to_letters[i].  All characters in 
    the text parameter not found in from_letters are left as-is.
    Case of letters in the text parameter are preserved in the result.
    For example translate("ABC","CAB","C3PO-aBA") will return the 
    string "B3PO-cAC".  Likewise, translate("CAB","ABC","B3PO-cAC")
    will return the string "C3PO-aBA".   
    """
    # Check that parameters meet assumptions. The only assumption not
    # tested is that each character in from_letters should occur once.
    # Students should not change this code.  It is here to catch mistakes.
    if not(from_letters.isupper() and from_letters.isalpha() and 
           to_letters.isupper() and to_letters.isalpha()):
        raise ValueError("from_letters and to_letters must be all uppercase letters")
    if len(from_letters) != len(to_letters):
        raise ValueError("from_letters and to_letters must be the same length")
    if not isinstance(text, str):
        raise TypeError("text must be a string")
    # Students should add their code below for the translate function

    new_string=""
    text_list = list(text)
    original_text_list= list(text_list)
    for i in range(len(from_letters)): # iterates through the length of the inputted values to encrypt
        if from_letters[i].upper() in text.upper():
            for j in range(len(text_list)):# iterates through each letter in the text to see if it matches each letter in the inputted values
                if original_text_list[j].upper()==from_letters[i].upper(): 
                    if original_text_list[j].isupper():
                        text_list[j]=to_letters[i].upper()
                    else:
                        text_list[j]=to_letters[i].lower()
    for a in text_list:
        new_string+=a
    return new_string
'''    
    text_list =list(text)
    new_text_list=list(text_list)
    #triyng to check if the letter is in the text despite being uppercase or lower case
    upper=from_letters.upper()
    upper_list=list(upper)

    for i in range(len(from_letters)): # iterates through the length of the inputted values to encrypt
        if from_letters[i] in text:
            for j in range (len(text_list)):# iterates through each letter in the text to see if it matches each letter in the inputted values
                if new_text_list[j]==upper_list[i]: #upper_list[i] use to be from_letters[i]
                    text_list[j]=to_letters[i]
'''


# Write functions as needed here.
# We usually have the main() function as the last function
# in a file.   Delete this comment.


def main():
    # Write your main function here.  Delete this comment
    # and the pass statement below.
    pass


if __name__ == "__main__":
    main()
